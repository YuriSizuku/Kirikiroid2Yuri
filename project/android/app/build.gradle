plugins {
    id 'com.android.application'
}

android {
    // compileSdkVersion PROP_TARGET_SDK_VERSION
    ndkVersion '25.2.9519653'
    buildToolsVersion '33.0.2'
    compileSdkVersion PROP_TARGET_SDK_VERSION.toInteger()
    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_11
//        targetCompatibility JavaVersion.VERSION_11
    }

    defaultConfig {
        applicationId "com.yuri.kirikiri2"
        targetSdkVersion PROP_TARGET_SDK_VERSION
        minSdkVersion PROP_MIN_SDK_VERSION

        ndk {
            abiFilters = []
            abiFilters.addAll(PROP_APP_ABI.split(':').collect{it as String})
        }

        externalNativeBuild {
            if (PROP_BUILD_TYPE == 'cmake') {
                cmake {
                    version '3.22.1'
                    targets 'krkr2yuri'
                    arguments "-DCMAKE_FIND_ROOT_PATH=", "-DANDROID_STL=c++_static", "-DANDROID_TOOLCHAIN=clang", "-DOpenCV_DIR=/root/CLionProjects/Kirikiroid2Yuri/thirdparty/port/opencv/sdk/native/jni" ,"-DANDROID_ARM_NEON=TRUE"
                    cppFlags "-frtti -fexceptions -fsigned-char"
                }
            }
        }
        versionCode 1
        versionName "1.4.0beta"
    }
    signingConfigs {
        release {
            storeFile file('sign.jks')
            def signPropsFile = file('sign.properties')
            if (signPropsFile.exists()) {
                Properties signProps = new Properties()
                signProps.load(new FileInputStream(signPropsFile))
                keyAlias signProps['SIGN_KEY_ALIAS']
                keyPassword signProps['SIGN_KEY_PASS']
                storePassword signProps['SIGN_STORE_PASS']
            }
            else {
                keyAlias System.getenv("SIGN_KEY_ALIAS")
                keyPassword System.getenv("SIGN_KEY_PASS")
                storePassword System.getenv("SIGN_STORE_PASS")
            }
        }
    }
    buildTypes {
        release {
            debuggable false
            renderscriptDebuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
        }

        debug {
            debuggable true
            jniDebuggable true
            jniDebuggable true
            renderscriptDebuggable true
//            signingConfig signingConfigs.release
        }
    }

    sourceSets{
        main{
            manifest.srcFile "AndroidManifest.xml"
            java.srcDirs = ["java"]
            res.srcDirs = ["res"]
            assets.srcDirs =["../../../assets"]
        }

    }

    externalNativeBuild {
        cmake {
            version '3.22.1'
            path "cpp/CMakeLists.txt"
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "krkr2yuri_v${defaultConfig.versionName}.apk"
        }
    }
}

dependencies {
    //implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':cocos2dx')

    implementation "androidx.documentfile:documentfile:1.0.1"
    //noinspection GradleDependency
    implementation "androidx.activity:activity:1.2.3"
    //noinspection GradleDependency
    implementation "androidx.fragment:fragment:1.3.4"
}
